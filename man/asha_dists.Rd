% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_functions.R
\name{asha_dists}
\alias{asha_dists}
\title{Obter informac√µes de distancia e tempo de viagem por modal}
\usage{
asha_dists(fluxo, zonas, modal = "walking", api)
}
\arguments{
\item{fluxo}{Uma matriz ou data frame de duas colunas representando a
latitude e a longitude das origens.}

\item{zonas}{Uma matriz ou data frame de duas colunas representando a
latitude e a longitude dos destinos.}

\item{modal}{String especificando o modo de transporte, que pode ser bicycling (padrao),
walking, driving ou transit}

\item{api}{String com API do Google Distance Matrix API}
}
\value{
Retorna um data frame com colunas \code{de} (enderecos de origem),
        \code{para} (enderecos de destino), \code{distancias} (em metros),
        \code{tempo} (em segundos), \code{moeda} e \code{tarifa}
}
\description{
Permite o levantamento de dados de rotas de viagem para
             modais de transporte entre dois conjuntos de pontos espaciais
}
\details{
Converte o CRS do objeto passado em \code{zonas} em lat long (4326) para
         consultar a Google Matrix Distance API com funcao \code{\link[stplanr]{dist_google}}.
         A consulta pode ser feita para os modais caminhada, transporte publico,
         bicicleta e carro. Prepara automaticamente os objeto OD com
         \code{\link[stplanr]{od2odf}} e gera resultados para pares linha a linha,
         ao inves de todos para todos como o pacote stplanr, reduzindo o consumo da API.
}
\examples{
cent <- sf::st_centroid(setores)
x <- asha_nn(ubs_pontos, setores, "cnes", "cd_geocodi", 1)
zonas <- asha_zones(cent, ubs_pontos, "cd_geocodi", "cnes")
asha_dists(x[500:501, ], zonas, "transit")

}
\seealso{
\code{\link[stplanr]{dist_google}},
         \code{\link[stplanr]{od2odf}}
}
\author{
Bruno Pinheiro
}
